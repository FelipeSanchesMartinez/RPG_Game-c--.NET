// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgGame.Data;

#nullable disable

namespace RpgGame.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20230515213644_JogadorPartidaVencedorNull")]
    partial class JogadorPartidaVencedorNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RpgGame.Models.Partida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<long>("PartidaJogador1Id")
                        .HasColumnType("bigint");

                    b.Property<long>("PartidaJogador2Id")
                        .HasColumnType("bigint");

                    b.Property<long>("PartidaJogadorTurnoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PartidaJogadorVencedorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("PartidaJogador1Id")
                        .IsUnique();

                    b.HasIndex("PartidaJogador2Id")
                        .IsUnique();

                    b.HasIndex("PartidaJogadorTurnoId")
                        .IsUnique();

                    b.HasIndex("PartidaJogadorVencedorId")
                        .IsUnique()
                        .HasFilter("[PartidaJogadorVencedorId] IS NOT NULL");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("RpgGame.Models.PartidaJogador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PersonagemId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrimeiroTurno")
                        .HasColumnType("bit");

                    b.Property<int>("ResultadoDadoPrimeiroTurno")
                        .HasColumnType("int");

                    b.Property<int>("Vida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("PartidaJogador");
                });

            modelBuilder.Entity("RpgGame.Models.PartidaLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Agilidade")
                        .HasColumnType("int");

                    b.Property<int>("Atributo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("DadoResultado")
                        .HasColumnType("int");

                    b.Property<int?>("Dano")
                        .HasColumnType("int");

                    b.Property<int?>("DanoDadoResultado")
                        .HasColumnType("int");

                    b.Property<int>("DanoTotal")
                        .HasColumnType("int");

                    b.Property<bool>("Defendeu")
                        .HasColumnType("bit");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<long>("PartidaId")
                        .HasColumnType("bigint");

                    b.Property<long>("PartidaJogadorId")
                        .HasColumnType("bigint");

                    b.Property<int>("Resultado")
                        .HasColumnType("int");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("PartidaId");

                    b.HasIndex("PartidaJogadorId");

                    b.ToTable("PartidaLog");
                });

            modelBuilder.Entity("RpgGame.Models.Personagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Agilidade")
                        .HasColumnType("int");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("Defesa")
                        .HasColumnType("int");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<int>("FacesDado")
                        .HasColumnType("int");

                    b.Property<int>("Forca")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("QtdDados")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Vida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personagem");
                });

            modelBuilder.Entity("RpgGame.Models.Partida", b =>
                {
                    b.HasOne("RpgGame.Models.PartidaJogador", "Jogador1")
                        .WithOne("Partida1")
                        .HasForeignKey("RpgGame.Models.Partida", "PartidaJogador1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RpgGame.Models.PartidaJogador", "Jogador2")
                        .WithOne("Partida2")
                        .HasForeignKey("RpgGame.Models.Partida", "PartidaJogador2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RpgGame.Models.PartidaJogador", "JogadorTurno")
                        .WithOne("PartidaTurno")
                        .HasForeignKey("RpgGame.Models.Partida", "PartidaJogadorTurnoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RpgGame.Models.PartidaJogador", "JogadorVencedor")
                        .WithOne("PartidaVencedor")
                        .HasForeignKey("RpgGame.Models.Partida", "PartidaJogadorVencedorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Jogador1");

                    b.Navigation("Jogador2");

                    b.Navigation("JogadorTurno");

                    b.Navigation("JogadorVencedor");
                });

            modelBuilder.Entity("RpgGame.Models.PartidaJogador", b =>
                {
                    b.HasOne("RpgGame.Models.Personagem", "Personagem")
                        .WithMany("PartidasJogador")
                        .HasForeignKey("PersonagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("RpgGame.Models.PartidaLog", b =>
                {
                    b.HasOne("RpgGame.Models.Partida", "Partida")
                        .WithMany("Logs")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgGame.Models.PartidaJogador", "Jogador")
                        .WithMany("Logs")
                        .HasForeignKey("PartidaJogadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("RpgGame.Models.Partida", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("RpgGame.Models.PartidaJogador", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("Partida1");

                    b.Navigation("Partida2");

                    b.Navigation("PartidaTurno");

                    b.Navigation("PartidaVencedor");
                });

            modelBuilder.Entity("RpgGame.Models.Personagem", b =>
                {
                    b.Navigation("PartidasJogador");
                });
#pragma warning restore 612, 618
        }
    }
}
